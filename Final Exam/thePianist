function solve(input) {
    let pieces = input.shift();
    let obj = {};

    for (let i = 0; i < pieces; i++) {
        let tokens = input.shift().split('|');
        let [piece, composer, key] = tokens;
        obj[piece] = {composer, key};
    }

    for (const line of input) {
        
        let tokens = line.split('|');
        let [command, piece, composer, key] = tokens;
        if(command === 'Stop'){
            break;
        }
        if(command === 'Add'){
            if(obj.hasOwnProperty(piece)){
                console.log(`${piece} is already in the collection!`);
            } else {
                obj[piece] = {composer, key: key};
                console.log(`${piece} by ${composer} in ${key} added to the collection!`);
            }
        } else if(command === 'Remove'){
            if(obj.hasOwnProperty(piece)){
                delete obj[piece];
                console.log(`Successfully removed ${piece}!`);
            }else {
                console.log(`Invalid operation! ${piece} does not exist in the collection.`);
            }
        } if (command === 'ChangeKey'){
            if(obj.hasOwnProperty(piece)){
                key = composer
                obj[piece].key = key;
                console.log(`Changed the key of ${piece} to ${key}!`);
            } else {
                console.log(`Invalid operation! ${piece} does not exist in the collection.`);
            }
        }
    }
    for (const [piece, collection] of Object.entries(obj)) {
        console.log(`${piece} -> Composer: ${collection.composer}, Key: ${collection.key}`);
    }
}
solve([
        '4',
        'Eine kleine Nachtmusik|Mozart|G Major',
        'La Campanella|Liszt|G# Minor',
        'The Marriage of Figaro|Mozart|G Major',
        'Hungarian Dance No.5|Brahms|G Minor',
        'Add|Spring|Vivaldi|E Major',
        'Remove|The Marriage of Figaro',
        'Remove|Turkish March',
        'ChangeKey|Spring|C Major',
        'Add|Nocturne|Chopin|C# Minor',
        'Stop'
])
